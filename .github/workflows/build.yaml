on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

name: build
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    env:
      STACK_YAML: ${{ matrix.stack_yaml }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - ghc: '9.8.4'
            os: ubuntu-latest
            stack_yaml: 'stack-ghc-9.8.yaml'
            stack_args: '--haddock --no-haddock-deps'
            flags: '--flag toysolver:BuildToyFMF --flag toysolver:BuildSamplePrograms --flag toysolver:BuildMiscPrograms --flag toysolver:optparse-applicative-018'
            platform: linux-x86_64
            release: true

          - ghc: '9.8.4'
            os: ubuntu-latest
            stack_yaml: 'stack-ghc-9.8.yaml'
            stack_args: '--docker --docker-image "quay.io/benz0li/ghc-musl:9.8.4"'
            flags: '--flag toysolver:BuildToyFMF --flag toysolver:BuildSamplePrograms --flag toysolver:BuildMiscPrograms --flag toysolver:optparse-applicative-018 --flag toysolver:LinuxStatic'
            platform: linux-x86_64-static
            release: true

          - ghc: '9.8.4'
            os: ubuntu-latest
            stack_yaml: 'stack-ghc-9.8.yaml'
            stack_args: '--docker --docker-image "quay.io/benz0li/ghc-musl:9.8.4"'
            flags: '--flag toysolver:BuildToyFMF --flag toysolver:BuildSamplePrograms --flag toysolver:BuildMiscPrograms --flag toysolver:optparse-applicative-018'
            platform: linux-x86_64-static
            release: true

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Write arch to stack.yaml (macos-x86_64)
        if: matrix.platform == 'macos-x86_64'
        run: |
          echo "arch: x86_64" >> ${STACK_YAML}

      - uses: haskell-actions/setup@v2
        id: setup-haskell
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          stack-version: 'latest'
          stack-no-global: ${{ (matrix.platform == 'linux-x86_64-static') && 'true' || '' }}
          cabal-update: false

      - name: Setup stack to use system GHC
        if: matrix.platform != 'macos-x86_64'
        run: stack config set system-ghc --global true

      - uses: actions/cache@v4
        name: Cache ~/.stack
        with:
          path: ${{ steps.setup-haskell.outputs.stack-root }}
          key: ${{ matrix.platform }}-${{ matrix.ghc }}-${{ hashFiles('toysolver.cabal', matrix.stack_yaml) }}
          restore-keys: |
            ${{ matrix.platform }}-${{ matrix.ghc }}-

      # https://github.com/commercialhaskell/stack/issues/5405
      - name: Clear setup-exe-cache directory
        if: runner.os == 'macOS'
        continue-on-error: true
        run: rm -r ~/.stack/setup-exe-cache

      - name: Print GHC info
        run: |
          set -x
          stack exec ${{ matrix.stack_args }} -- ghc --info
          stack exec ${{ matrix.stack_args }} -- nproc
          stack exec ${{ matrix.stack_args }} -- nproc --all

      - name: Build dependencies
        shell: bash
        run: stack build --test --no-run-tests --bench --no-run-benchmarks --only-dependencies ${{ matrix.stack_args }} ${{ matrix.flags }}

      - name: Build
        shell: bash
        run: stack build --test --no-run-tests --bench --no-run-benchmarks --ghc-options=-j ${{ matrix.stack_args }} ${{ matrix.flags }}
